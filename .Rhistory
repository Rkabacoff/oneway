use_package("broom")
use_package("ggplot2")
use_package("dplyr")
library(oneway)
library(oneway)
?plot
library(oneway)
?plot
library(oneway)
library(oneway)
library(oneway)
library(oneway)
?sqrt
?sd
?mean
?stats
library(oneway)
library(oneway)
?summary
library(oneway)
library(oneway)
library(oneway)
library(oneway)
example("oneway")
plot(mileage)
mileage
summary(mileage)
library(broom)
tidy(mileage$anova)
glimpse(mileage$anova)
?tidy
glance(mileage$anova)
as.data.frame(glance(mileage$anova))
library(oneway)
fit <- oneway(disp ~ gear)
fit <- oneway(disp ~ gear, mtcars)
fit
summary(fit)
plot(fit)
library(oneway)
plot(fit)
?plot.oneway
?TukeyHSD
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
plot(fit)
print(fit)
posthoc(fit)
class(fit)
posthoc.oneway
posthoc.oneway(fit)
?posthoc.oneway
library(oneway)
fit
posthoc(fit)
?TukeyHSD
fit$anova
aov(fit$anova)
library(oneway)
TukeyHSD(fit$anova)
TukeyHSD(aov(fit$anova))
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
fit
plot(fit)
summary(fit)
TukeyHSD(aov(fit$anova))
posthoc(fit)
aov(fit$anova)
summary(aov(fit$anova))
broom::tidy(summary(aov(fit$anova)))
broom::tidy(aov(fit$anova))
fit <- oneway(hp ~ gear, mtcars)
plot(fit)
posthoc(fit)
fit <- oneway(hp ~ carb, mtcars)
fit
posthoc(fit)
fit
plot(fit)
?aov
x <- aov(mpg ~ gear, mtcars)
names(x)
x$model
aov
x
summary(x)
names(x)
broom::tidy(x)
as.data.frame(broom::tidy(x))
summary(x)
library(oneway)
?oneway
library(oneway)
?oneway
library(oneway)
?oneway
library(oneway)
?oneway
library(oneway)
?oneway
library(oneway)
library(oneway)
?oneway
library(usethis)
?use_vignette
use_vignette("oneway", "Intro to the oneway package")
library(pkgdown)
build_site
build_site()
?invisible
library(oneway)
example(posthoc)
library(oneway)
assumptions(mileage)
qqPlot(mileage$anova)
library(car)
qqPlot(mileage$anova)
mileage$anova
?qqPlot
class(mileage$anova)
x <- mileage$anova
qqPlot(x)
x
x <- lm(mpg ~ factor(cyl), mtcars)
class(x)
qqPlot(x)
y <- mileage$anova
library(oneway)
summary(mileage$anova)
assumptions
assumptions(mileage)
mileage$anova$formula
x$formula
y$formula
names(mileage)
x <- mileage$anova
names(x)
x$call
plot(mileage$anova)
summary(lm(hp ~ wt, mtcars))
library(ggplot2)
ggplot(mtcars, aes(x=wt, y=hp)) +
geom_point() + geom_smooth(se=FALSE)
ggplot(mtcars, aes(x=wt, y=hp)) +
geom_point() + geom_smooth(se=FALSE, method="lm")
?mtcars
ggplot(mtcars, aes(x=wt, y=hp)) +
geom_point() + geom_smooth(se=FALSE, method="lm") +
labs(x= "Weight (1000 lbs)",
y = "Gross Horsepower")
library(caret)
x <- lm(hp ~ wt, mtcars)
postResample(x$fitted, x$hp)
x$fitted.values
postResample(x$fitted.values, x$hp)
x$hp
postResample(x$fitted.values, mtcars$hp)
cor(mtcars$hp, mtcars$wt)
title="Relationship between Horsepower and Car Weigth"")
ggplot(mtcars, aes(x=wt, y=hp)) +
geom_point() + geom_smooth(se=FALSE, method="lm") +
labs(x= "Weight (1000 lbs)",
y = "Gross Horsepower",
title="Relationship between Horsepower and Car Weigth")
library(dplyr)
summarise_groups <- function(dataframe, grouping_var, column_name){
grouping_var <- enquo(grouping_var)
column_name <- enquo(column_name)
dataframe %>%
group_by(!!grouping_var) %>%
summarise(!!mean_name := mean(!!column_name, na.rm = TRUE))
}
summarise_groups(mtcars, cyl, mpg)
stats_by <- function(data, by, var){
require(dplyr)
by <- enquo(by)
var <- enquo(var)
mean_name <- paste0("mean_", as_label(var))
sd_name <- paste0("sd_", as_label(var))
data %>%  group_by(!!by) %>%
summarize(n=n(),
!!mean_name := mean(!!var),
!!sd_name   := sd(!!var))
}
stats_by(mtcars, cyl, mpg )
summarise_groups <- function(dataframe, grouping_var, column_name){
grouping_var <- enquo(grouping_var)
column_name <- enquo(column_name)
mean_name <- paste0("mean_", as_label(column_name))
dataframe %>%
group_by(!!grouping_var) %>%
summarise(!!mean_name := mean(!!column_name, na.rm = TRUE))
}
summarise_groups(mtcars, cyl, wt)
summarise_groups <- function(dataframe, grouping_var, column_name){
dataframe %>%
group_by({{grouping_var}}) %>%
summarise({{column_name}} := mean({{column_name}}, na.rm = TRUE))
}
summarise_groups(mtcars, cyl, mpg)
citation(ggplot2)
library(ggplot2)
citation(ggplot2)
citation("ggplot2")
library(oneway)
library(pkgdown)
build_site()
library(testthat)
library(usethis)
use_vignette("oneway")
build_site()
library(ggplot2)
cars <- mpg[c("hwy", "class", "year")]
View(cars)
use_data(cars)
library(oneway)
?cars
build_site()
fit <- oneway(mpg ~ carb, mtcars)
fit
library(dplyr)
library(dplyr)
mtcars %>%
group_by(cyl) %>%
summarise(n = n(),
mean = mean(mpg),
sd = sd(mpg))
mystats <- function(data, group, y) {
require(dplyr)
data %>%
group_by(.data[[group]]) %>%
summarise(n = n(),
mean = mean(.data[[y]]),
sd = sd(.data[[y]]))
}
mystats(mtcars, g="cyl", y="mpg")
mystats <- function(data, group, y) {
require(dplyr)
data %>%
group_by(data$group) %>%
summarise(n = n(),
mean = mean(data$y),
sd = sd(data$y))
}
mystats(mtcars, g="cyl", y="mpg")
mystats <- function(data, group, y) {
require(dplyr)
data %>%
group_by(.data[[group]]) %>%
summarise(n = n(),
mean = mean(.data[[y]]),
sd = sd(.data[[y]]))
}
mystats(mtcars, g="cyl", y="mpg")
mystats <- function(data, group, y) {
require(dplyr)
data %>%
group_by(.data[[group]]) %>%
summarise(n = n(),
mean = mean(.data[[y]]),
sd = sd(.data[[y]])) %>%
as.data.frame()
}
mystats(mtcars, g="cyl", y="mpg")
mystats <- function(data, group, y) {
require(dplyr)
data %>%
group_by(.data[[group]]) %>%
summarise(n = n(),
mean = mean(.data[[y]]),
sd = sd(.data[[y]])) %>%
as.data.frame(, row.name=FALSE)
}
mystats(mtcars, g="cyl", y="mpg")
mystats <- function(data, group, y) {
require(dplyr)
group <- enquo(group)
y <- enquo(y)
data %>%
group_by(!!group) %>%
summarise(n = n(),
mean = mean(!!y),
sd = sd(!!y)) %>%
as.data.frame()
}
mystats(mtcars, g=cyl, y=mpg)
x <- as.formula(mpg ~ cyl)
x
x[[1]]
x[[2]]
x[[3]]
mystats <- function(formula, data) {
require(dplyr)
group <- as.character(formula[[3]])
y <- as.character(formula[[2]])
data %>%
group_by(.data[[group]]) %>%
summarise(n = n(),
mean = mean(.data[[y]]),
sd = sd(.data[[y]])) %>%
as.data.frame()
}
mystats(mpg~cyl, mtcars)
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
fit
library(crayon)
red$bold$underline("Summary Statistics")
library(oneway)
fit
library(oneway)
fit
library(tidyverse)
?dplyr
library(dplyr)
?dplyr
library(usethis)
?use_package
library(usethis)
use_package("dplyr", type="Imports")
use_package("ggplot2", type="Imports")
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
fit
summary(fit)
plot(fit)
library(oneway)
plot(fit)
library(oneway)
plot(fit)
library(oneway)
plot(fit)
library(oneway)
plot(fit)
plot.oneway <- function(x, ...){
if(!inherits(x, "oneway"))
stop("Must be class 'oneway")
g <- as.character(x$anova$terms[[3]])
y <- as.character(x$anova$terms[[2]])
ggplot(x$anova$model,
aes(x=factor(.data[[g]]), y=.data[[y]])) +
geom_boxplot(...) +
labs(x=g)
}
library(oneway)
rm(plot.oneway)
fit(oneway())
plot(fit)
names(fit)
names(fit$anova)
fit$anova$model
fit$anova$terms
fit$anoav$terms[[1]]
fit$anoav$terms[[2]]
fit$anova$terms[[1]]
fit$anova$terms[[2]]
fit$anova$terms[[3]]
library(oneway)
plot(fit)
library(oneway)
plot(fit)
library(oneway)
plot(fit)
library(oneway)
plot(fit, fill="skyblue")
library(oneway)
plot(fit, fill="blue")
plot(fit, aes(fill=mtcars$cyl))
library(oneway)
plot(fit)
library(oneway)
plot(fit)
library(oneway)
plot(fit)
library(oneway)
plot(fit)
library(pkgdown)
build_site()
library(pkgdown)
build_site()
library(oneway)
mileage <- oneway(mpg ~ cyl, mtcars)
mileage
summary(mileage)
plot(mileage)
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
summary(fit)
plot(fit)
?plot.oneway
plot(fit, plot="violin")
plot(fit, plot="dinsity_ridges")
plot(fit, plot="density_ridges")
assumptions(fit)
posthoc(fit)
library(oneway)
posthoc(fit)
fit
fit <- oneway(mpg ~ cyl, mtcars)
posthoc(fit)
debug(posthoc)
posthoc(fit)
names(model)
names(model$anova)
model$anova$terms
model$anova$terms[[3]]
model$anoava$terms
model$anova$terms
model$anova$model
names(a)
TukeyHSD(a)
TukeyHSD(fit)
TukeyHSD(fit$anova)
names(fit)
?TukeyHSD
TukeyHSD(aov(fit$anova))
?aov
aov(fit)
names(fit)
names(fit$anova)
fit$anova$call
View(fit)
?TukeyHSD
TukeyHSD(lm(mpg ~ cyl, mtcars))
TukeyHSD(aov(lm(mpg ~ cyl, mtcars)))
mtcars$cyl <- factor(mtcars$cyl)
TukeyHSD(aov(lm(mpg ~ cyl, mtcars)))
library(oneway)
posthoc(fit)
fit <- oneway(mpg ~ cyl, mtcars)
posthoc(fit)
x <- as.formula(mpg ~ cyl)
x
x[[1]]
x[1]
x[[2]]
x[[3]]
data(mtcars)
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
summary(fit)
posthoc(fit)
assumptions(fit = )
assumptions(fit)
plot(fit)
report <- function(formula, data, browse=FALSE){
formula <- deparse(substitute(formula))
data <- deparse(substitute(data))
# read template file and modify
report <- readLines(system.file("oneway_template.txt",
package="mypackage"))
report <- gsub("xxxformula", formula, report, fixed = TRUE)
report <- gsub("xxxdata", data, report, fixed = TRUE)
# output template and render
tf <- tempfile(fileext = ".Rmd")
to <- tempfile(fileext = ".html")
writeLines(report, tf)
# generate the report
library(rmarkdown)
render(input=tf, output_format="html_document", output_file=to)
if (browse){
file.show(to)
} else {
viewer <- getOption("viewer")
viewer(to)
}
invisible(to)
}
report <- function(formula, data, browse=FALSE){
formula <- deparse(substitute(formula))
data <- deparse(substitute(data))
# read template file and modify
report <- readLines(system.file("oneway_template.txt",
package="mypackage"))
report <- gsub("xxxformula", formula, report, fixed = TRUE)
report <- gsub("xxxdata", data, report, fixed = TRUE)
# output template and render
tf <- tempfile(fileext = ".Rmd")
to <- tempfile(fileext = ".html")
writeLines(report, tf)
# generate the report
library(rmarkdown)
render(input=tf, output_format="html_document", output_file=to)
if (browse){
file.show(to)
} else {
viewer <- getOption("viewer")
viewer(to)
}
invisible(to)
}
library(oneway)
report(mpg ~ cyl, mtcars)
x <- report(mpg ~ cyl, mtcars)
x
debug(report)
x <- report(mpg ~ cyl, mtcars)
library(oneway)
report(mpg ~ cyl, mtcars)
debug(report)
report(mpg ~ cyl, mtcars)
rm(report)
rm(x)
library(oneway)
report(mpg ~ cyl, mtcars)
library(oneway)
report(mpg ~ cyl, mtcars)
report(mpg ~ cyl, mtcars, browser=FALSE)
report(mpg ~ cyl, mtcars, browse=FALSE)
report(mpg ~ cyl, mtcars, browser=TRUE)
report(mpg ~ cyl, mtcars, browse=TRUE)
